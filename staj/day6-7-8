// For loop structure
//for(initialization, condition, increment/decrement){
//   code goes here
//}
for(let i = 0; i <= 5; i++){
  console.log(i)
}

// 0 1 2 3 4 5
for(let i = 5; i >= 0; i--){
  console.log(i)
}

// 5 4 3 2 1 0
for(let i = 0; i <= 5; i++){
  console.log(`${i} * ${i} = ${i * i}`)
}

const numbers = [1, 2, 3, 4, 5]
let sum = 0
for(let i = 0; i < numbers.length; i++){
  sum  = sum + numbers[i]  // can be shorten, sum += numbers[i]

}

console.log(sum)

let j = 0
while (j <= 5) {
  console.log(j)
  j++
}

let k = 0
do {
  console.log(k)
  k++
} while (k <= 5)

for (const element of arr) {
    // code goes here
  }

  const numbers2 = [1, 2, 3, 4, 5]

for (const num of numbers2) {
  console.log(num)
}

for (const num of numbers2) {
    console.log(num * num)
  }

  for(let i = 0; i <= 5; i++){
    if(i == 3){
      break
    }
    console.log(i)
  }

  for(let i = 0; i <= 5; i++){
    if(i == 3){
      continue
    }
    console.log(i)
  }

  //declaring a function without a parameter
function functionName() {
    // code goes here
  }
  functionName() // calling function by its name and with parentheses

  function square() {
    let num = 2
    let sq = num * num
    console.log(sq)
  }
  
  square()

  function addTwoNumbers() {
    let numOne = 10
    let numTwo = 20
    let sum = numOne + numTwo
  
    console.log(sum)
  }
  
  addTwoNumbers()

  function addTwoNumbers2() {
    let numOne = 2
    let numTwo = 3
    let total = numOne + numTwo
    return total

}

console.log(addTwoNumbers2())

// function with one parameter
function functionName(parm1) {
    //code goes her
  }
  functionName(parm1)

  function areaOfCircle(r) {
    let area = Math.PI * r * r
    return area
  }
  
  console.log(areaOfCircle(10))

// function with two parameters
function functionName(parm1, parm2) {
    //code goes her
  }

  function sumTwoNumbers(numOne, numTwo) {
    let sum = numOne + numTwo
    return sum
  }

  console.log(sumTwoNumbers(10, 20))

  // function with multiple parameters
//function functionName(parm1, parm2, parm3,...){
    //code goes here
 // }
  //functionName(parm1,parm2,parm3,...)

  function sumArrayValues(arr) {
    let sum = 0;
    for (let i = 0; i < arr.length; i++) {
      sum = sum + arr[i];
    }
    return sum;
  }
  const numbers4 = [1, 2, 3, 4, 5];
      //calling a function
  console.log(sumArrayValues(numbers4));

  /*function sumAllNums() {
    console.log(arguments)
   }
   
   sumAllNums(1, 2, 3, 4)*/

   function sumAllNums() {
    let sum = 0
    for (let i = 0; i < arguments.length; i++) {
      sum += arguments[i]
    }
    return sum
  }
  
  console.log(sumAllNums(1, 2, 3, 4))

  const anonymousFun = function() {
    console.log(
      'I am an anonymous function and my value is stored in anonymousFun'
    )
  }

  const square = function(n) {
    return n * n
  }
  
  console.log(square(2))

  //scope.js
a = 'JavaScript' // declaring a variable without let or const make it available in window object and this found anywhere
b = 10 // this is a global scope variable and found in the window object
function letsLearnScope() {
  console.log(a, b)
  if (true) {
    console.log(a, b)
  }
}
console.log(a, b)

function letsLearnScope() {
    var gravity = 9.81
    console.log(gravity)
  
  }
  // console.log(gravity), Uncaught ReferenceError: gravity is not defined
  
  if (true){
    var gravity = 9.81
    console.log(gravity) // 9.81
  }
  console.log(gravity)  // 9.81

  for(var i = 0; i < 3; i++){
    console.log(i) // 0, 1, 2
  }
  console.log(i)

  //An empty object

const person = {}

const rectangle = {
    length: 20,
    width: 20
  }
  console.log(rectangle) // {length: 20, width: 20}
  
  const person2 = {
    firstName: 'Asabeneh',
    lastName: 'Yetayeh',
    age: 250,
    country: 'Finland',
    city: 'Helsinki',
    skills: [
      'HTML',
      'CSS',
      'JavaScript',
      'React',
      'Node',
      'MongoDB',
      'Python',
      'D3.js'
    ],
    isMarried: true
  }
  console.log(person2)
  console.log(person.firstName)
  console.log(person.lastName)

  const person3 = {
    firstName: 'Asabeneh',
    lastName: 'Yetayeh',
    age: 250,
    country: 'Finland',
    city: 'Helsinki',
    skills: [
      'HTML',
      'CSS',
      'JavaScript',
      'React',
      'Node',
      'MongoDB',
      'Python',
      'D3.js'
    ],
    getFullName: function() {
      return `${this.firstName} ${this.lastName}`
    }
  }
  
  console.log(person3.getFullName())
  person.nationality = 'Ethiopian'
  person.country = 'Finland'
  person.title = 'teacher'
  person.skills.push('Meteor')
  person.skills.push('SasS')
  person.isMarried = true
  
  person.getPersonInfo = function() {
    let skillsWithoutLastSkill = this.skills
      .splice(0, this.skills.length - 1)
      .join(', ')
    let lastSkill = this.skills.splice(this.skills.length - 1)[0]
  
    let skills = `${skillsWithoutLastSkill}, and ${lastSkill}`
    let fullName = this.getFullName()
    let statement = `${fullName} is a ${this.title}.\nHe lives in ${this.country}.\nHe teaches ${skills}.`
    return statement
  }
  console.log(person3)
  console.log(person3.getPersonInfo())

  const keys = Object.keys(copyPerson)
console.log(keys)

const values = Object.values(copyPerson)
console.log(values)

const entries = Object.entries(copyPerson)
console.log(entries)

console.log(copyPerson.hasOwnProperty('name'))
console.log(copyPerson.hasOwnProperty('score'))
